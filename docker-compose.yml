version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: oreliya-postgres
    environment:
      POSTGRES_DB: oreliya_db
      POSTGRES_USER: oreliya_user
      POSTGRES_PASSWORD: oreliya_password
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U oreliya_user -d oreliya_db']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - oreliya-network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: oreliya-web
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://oreliya_user:oreliya_password@postgres:5432/oreliya_db
      PORT: 3000
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/api/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - oreliya-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  oreliya-network:
    driver: bridge
